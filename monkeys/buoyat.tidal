


-- analolgsub  hatclosed  leads      pad           sparkly
-- bass        hatopen    longatmo   playstation   themood
-- basses      jazzy      loops      powerplant    vrs
-- basssub     kick       misc       scraped       waitforyou
-- breakbeats  kickdrive  noir       snare
-- effects     kicklayer  onevenen1  snareclassic
-- fads        kicks      onevenen2  snaremod


do
  p "kickaroos"
    $ slow 2
    $ n (run 16)
    # s "808bd"
    # hpf 70
    -- # decay 0.1




xfadeIn "atmo" 8
  $ chop 64
  $ n 3
  # s "longatmo"
  -- # cut 1
  # gain (mul 0 $ mul 1.6 $ range 0.5 1.0 $ slow 6 sine)
  # speed 0.5
  # room 0.5
  # sz 0.6








d1 $ loopAt 4 $ n 2 # sound "waitforyou"

d1 $ n 1 # s "sparkly"
  # cut 1


once $ sound "sparkly:7"

panic


hush



-- FX
xfadeIn "fx" 1
  -- $ mutep
  $ slow 4
  $ loopAt 4
  $ n (add 1 $ add "<3 2 2 2 3 3 2 3>" $ listToPat [0, 1, 2, 3])
  # sound "effects"
  # cut 1-- "<0 1 0 1 1 [1 0 0 1 0 10] 0 1 1 1 0 1 0 0>"
  # gain 1.0
  -- # lpf 13000



xfadeIn "dr" 2
  $ stack [
    slow 1
    $ fast (mul 1 $ "<1 1 2 1 2 2 2 1 1 2 1 2>")
    $ n (segment "<4 4 2 4 4>" $ chooseBy saw $ [ 1, 2, 3, 4])
    # sound "kickdrive"
    # gain 1.6
    -- # lpf 3000
    ,
    -- mask "1 1 0 1 1 1"
    fast 1
    $ n (segment "<16>*2" $ choose [1..10])
    # sound "hatclosed"
    # gain (add 0.6 $ mul 0.9 $ mul (range 0.8 1.2 $ fast 8 saw) $ range 0.6 0.9 $ fast 3 sine)
    ]


-- kicks I like [0, ]
d1 $ fast 2 $ n 4 # s "kickdrive"







xfadeIn "mouth" 1
  $ layer [id, (|* speed 0.5)]
  $ slow 2
  $ jux (rev . (|* speed 0.25))
  $ jux (rev)
  $ chop (1 * "<1 1 1 2 1 2 3 3 1 1 1 2 1 2 3 3>*2")
  -- $ chop (1 * "<1 1 1 2 3 1 2 3 4 1 1 2 3 4 1 4>*2")
  $ s "mouth" <| n (add 1 $ run 16)
  # gain 1.3 --(add 0.05 $ range 0.1 0.7 $ slow 2 saw)
  # delay 0.2
  # delaytime (0.125 * (range 0.99 1.11 $ slow 3 sine))
  # delayfeedback 0.2
  # lpf (rangex 4000 12000 $ fast 1 sine)
  # att 0.00001
  # speed 0.5
  # sz 0.4
  # room 0.5





xfadeIn "mood" 1
  $ fast 2
  $ jux (rev)
  $ striate 32
  $ loopAt 8
  $ layer [loopAt 4
          , id . (|* gain 0.5)
          ]
  $ n 1
  # sound "themood"
  # gain 1.6
  # delay 0.2
  # delaytime 0.128
  # delayfeedback 0.4
  # speed 0.5
  # legato 1.2












xfadeIn "plays" 1
  $ jux rev
  $ every 8 (|* speed 0.5)
  $ every 6 (|* speed 3)
  $ degradeBy 0.05
  $ chop 16
  $ layer [id
          , (fast 4)
            . (|* speed (0.5))
            . (|* gain 1.0)
            . (# pan rand)
          ]
  $ layer [loopAt 6, loopAt 4]
  $ n "<0 0 1 0 1 1 0 1 0 0 1>/3"
  # sound "playstation"
  # gain 1.0
  # up (-12)















xfadeIn "aaaaa" 2
  $ slow 3
  $ layer [id, (\p -> p # up 7)]
  $ n "<0 1 0 0 2 0 0 1 1>*4"
  # sound "longatmo"
  # gain 0.9




xfadeIn "sparks" 2
  $ fast 4
  $ n (segment 8 $ choose [1..sparklyNum])
  # sound "sparkly"
  # gain (mul 0.9 $ range 0.0 0.7 $ fast 4 saw)
  # cut "<0 0 1 0 1 1 0 1 1 0 1>"
  # delay 0.4
  # delaytime (mul 0.125 $ "<1 1 2 1 2 2 3>*3")
  # delayfeedback 0.3








xfadeIn "noir" 16
  $ slow 2
  -- $ layer [loopAt 2, loopAt 4]
  $ n 0
  # sound "noir"
  # gain 0.0
  # legato 1.0



xfadeIn "vrs" 8
  $ layer [loopAt 8, loopAt 4]
  -- $ layer [fast 2, slow 8]
  $ slow 1
  $ n "<0 0 1 0 0 1 1 0 [0 0 1 0 1]>*4"
  # s "vrs"
  # cut 0
  # up (mul 1 $ "<1 1 1 2 1 1 1 2 2>")
  # gain 0.0








xfadeIn "atmo" 4
  $ slow 2
  $ n "<1 2 3 4>/4"
  # sound "longatmo"
  # gain 1.3
  # legato 1.0
  # speed 0.75








xfadeIn "hh" 1
  $ n "3*4"
  # s "hatclosed"
  # gain 0.0
  # delay 0.2
  # delaytime (1/16)
  # delayfeedback (0.3)




xfadeIn "fx" 32
  $ every 4 (fast 2)
  $ slow 1
  $ every 3 ((# n 4) . (|* gain 0.7))
  $ gain 0.0
  # n 0
  # s "effects"
  # legato 1
  # delay 0.6
  # delaytime (1/8)
  # delayfeedback 0.5
  # lpf 2000













do
  let lfo1 = (range 0.8 0.9 $ fast 3 $ sine)
      lfo2 = (range 0.8 0.9 $ slow 2 sine)
  xfadeIn "k" 2
    $ n "<1 1 2 2 4 3 7 5 3>*<8 8 [8 8 16 8] 8 8 [8 8 16 16] 8 8 8 8>"
    # sound "kicklayer"
    # gain (mul 1.4 $ lfo1 * lfo2)
  xfadeIn "hh" 2
    $ fast (mul 1 $ "<1 1 2 1 2 2 2 1 2 2 1 2>")
    $ n (segment 8 $ irand hatclosedNum)
    # sound "hatclosed"
    # gain (add 0.2 $ range 0.6 0.8 $ fast 5 sine)
    # delay 0.3
    # delaytime 0.25
    # delayfeedback 0.3
  ------------------------------
  --HELLO WE ARE lnfinitemonkeys
  ------------------------------
  xfadeIn "fx" 2
    $ slow 1
    $ n (segment 8 $ choose [1..effectsNum])
    # sound "effects"
    # gain 1.1
    # cut 1
    # delay 0.2
    # delayfeedback 0.4
    # delaytime 0.125








d1 $ foldEvery [3] (# up 12) $ fast 8 $ n 1 # s "kick"




d1 $ stack [
  degradeBy 0.9 $ fast 16 $ n 1 # sound "kick"
  , fast 4 $ n 1 # sound "kick"
]






-- KICK DRUMS
-- dry kicks: [0, ]
do
  let lfo1 = (range 0.5 1 $ slow 1 isaw)
      lfo2 = rangex 0.8 1.5 $ fast 8 tri
      kick = fast 1
             $ n (segment 16 $ chooseBy (range 0.0 0.5 $ fast 2 tri) [0..kicklayerNum])
             # sound "kicklayer"
             # gain (lfo1 * lfo2)
      snare = mask "1" $ every 4 (ply (0.25 * "<2 2 4 2 2 4 8>"))
        $ n (segment 16 $ chooseBy rand [0, 1, 2, 4]) # sound "snaremod"
      hat = fast 16 $ n "8"
        # sound (chooseBy (sq) ["hatclosed","hatopen"])
        # gain 0.7
    -- # up "<0 5>"
    -- |* up "<0 0 12>"
  d1 $ stack [--sew ("1!!2 0 1 0 0") kick snare
             hat]



-- d1 $ sound "bd*8" # pan (cat [square, sine])




do
  let
    kick = n (run 4) # sound "kicks"
    drums = stack [ fast (fast 4 $ "<2 2 [4 0 0 1] 2 3>")
                    $ n (add "<2 3 4 5>" "<7*2 9 3*4 8>")
                    # sound "kicks"
                    , fast 8 $ n "30" # sound "hats"
                      # gain (range 0.2 0.9 $ slow 1 saw)
                      # gain 0
                  ]
    fx = n 2 # s "effects"
      # cut 0
    sparkles = silence
    bass = silence
  d1 $ stack [fx]



xfadeIn "breaks" 1
  $ mutep $ loopAt 4
  $ n 0
  # s "breakbeats" # cut 0
